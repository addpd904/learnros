// Generated by gencpp from file servecommunicate/mydata.msg
// DO NOT EDIT!


#ifndef SERVECOMMUNICATE_MESSAGE_MYDATA_H
#define SERVECOMMUNICATE_MESSAGE_MYDATA_H

#include <ros/service_traits.h>


#include <servecommunicate/mydataRequest.h>
#include <servecommunicate/mydataResponse.h>


namespace servecommunicate
{

struct mydata
{

typedef mydataRequest Request;
typedef mydataResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct mydata
} // namespace servecommunicate


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::servecommunicate::mydata > {
  static const char* value()
  {
    return "4781436a0c2affec8025955a6041e481";
  }

  static const char* value(const ::servecommunicate::mydata&) { return value(); }
};

template<>
struct DataType< ::servecommunicate::mydata > {
  static const char* value()
  {
    return "servecommunicate/mydata";
  }

  static const char* value(const ::servecommunicate::mydata&) { return value(); }
};


// service_traits::MD5Sum< ::servecommunicate::mydataRequest> should match
// service_traits::MD5Sum< ::servecommunicate::mydata >
template<>
struct MD5Sum< ::servecommunicate::mydataRequest>
{
  static const char* value()
  {
    return MD5Sum< ::servecommunicate::mydata >::value();
  }
  static const char* value(const ::servecommunicate::mydataRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::servecommunicate::mydataRequest> should match
// service_traits::DataType< ::servecommunicate::mydata >
template<>
struct DataType< ::servecommunicate::mydataRequest>
{
  static const char* value()
  {
    return DataType< ::servecommunicate::mydata >::value();
  }
  static const char* value(const ::servecommunicate::mydataRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::servecommunicate::mydataResponse> should match
// service_traits::MD5Sum< ::servecommunicate::mydata >
template<>
struct MD5Sum< ::servecommunicate::mydataResponse>
{
  static const char* value()
  {
    return MD5Sum< ::servecommunicate::mydata >::value();
  }
  static const char* value(const ::servecommunicate::mydataResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::servecommunicate::mydataResponse> should match
// service_traits::DataType< ::servecommunicate::mydata >
template<>
struct DataType< ::servecommunicate::mydataResponse>
{
  static const char* value()
  {
    return DataType< ::servecommunicate::mydata >::value();
  }
  static const char* value(const ::servecommunicate::mydataResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // SERVECOMMUNICATE_MESSAGE_MYDATA_H
